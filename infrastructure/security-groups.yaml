Description: >
  This template contains the security groups required by our entire stack.
  We create them in a seperate nested template, so they can be referenced
  by all of the other nested templates.

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  VPC:
    Type: AWS::EC2::VPC::Id
    Description: Choose which VPC the security groups should be deployed to

Resources:
  # This security group defines who/where is allowed to access the Public Application Load Balancer.
  PublicLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Access to the public load balancer that sits in front of ECS
      SecurityGroupIngress:
        # Allow access from anywhere to our ECS services
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-LoadBalancer-Public

  # This security group defines who/where is allowed to access the ECS hosts directly.
  # By default we're just allowing access from the load balancer.  If you want to SSH
  # into the hosts, or expose non-load balanced services you can open their ports here.
  ECSHostSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Access to the ECS hosts and the tasks/containers that run on them
      SecurityGroupIngress:
        # Only allow inbound access to ECS from the public ALB
        - SourceSecurityGroupId: !Ref PublicLoadBalancerSecurityGroup
          IpProtocol: -1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-ECS-Hosts

  # This security group defines who/where is allowed to access the Private Application Load Balancer.
  PrivateLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Access to the private load balancer that sits in front of ECS
      SecurityGroupIngress:
        # Only allow inbound access from ECS hosts
        - SourceSecurityGroupId: !Ref ECSHostSecurityGroup
          IpProtocol: -1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-LoadBalancer-Private

  # This security group defines who/where is allowed to access the Mongo VPCE
  FaceTecHostSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Access to the FaceTec Cluster
      SecurityGroupIngress:
        # Only allow inbound access to ECS from the private ALB
        - SourceSecurityGroupId: !Ref PrivateLoadBalancerSecurityGroup
          IpProtocol: -1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-FaceTec-Hosts

  # This security group defines who/where is allowed to access the Mongo VPCE
  MongoVPCESecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Access to the Mongo VPCE for the tasks/containers that run on the cluster
      SecurityGroupIngress:
        # Allow access from ECS hosts, and facetec
        - SourceSecurityGroupId: !Ref ECSHostSecurityGroup
          IpProtocol: -1
        - SourceSecurityGroupId: !Ref FaceTecHostSecurityGroup
          IpProtocol: -1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-Mongo-VPCE

Outputs:
  ECSHostSecurityGroup:
    Description: A reference to the security group for ECS hosts
    Value: !Ref ECSHostSecurityGroup

  FaceTecHostSecurityGroup:
    Description: A reference to the security group for FaceTec hosts
    Value: !Ref FaceTecHostSecurityGroup

  PublicLoadBalancerSecurityGroup:
    Description: A reference to the security group for the public load balancer
    Value: !Ref PublicLoadBalancerSecurityGroup

  PrivateLoadBalancerSecurityGroup:
    Description: A reference to the security group for the private load balancer
    Value: !Ref PrivateLoadBalancerSecurityGroup

  MongoVPCESecurityGroup:
    Description: A reference to the security group for Mongo VPCE
    Value: !Ref MongoVPCESecurityGroup
