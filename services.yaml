Description: >

  This template deploys the infrastructure for the SuperGuard service suite.
  This includes a VPC, with a pair of public and private subnets spread 
  across two Availabilty Zones. It deploys an Internet Gateway, with a default 
  route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ), 
  and default routes for them in the private subnets.

  It then deploys a highly available ECS cluster using an AutoScaling Group, with 
  ECS hosts distributed across multiple Availability Zones.

  Last Modified: 4th November 2021
  Author: Varshneya Rao <varshneya.rao@toptal.com> (Original - Paul Maddox <pmaddox@amazon.com>)

Parameters:
  EnvironmentName:
    Type: String
    Default: production
    Description: The name of the environment this stack is being deployed for

  S3Bucket:
    Type: String
    Description: Please provide the S3 Bucket to find the Cloudformation yaml files
    Default: superguard-ecs-cloudformation

  S3Region:
    Type: String
    Description: Please provide the S3 region hosting the S3 bucket
    Default: ap-southeast-2

Resources:
  APIRepo:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3Bucket}.s3.${S3Region}.amazonaws.com/infrastructure/image-repo.yaml.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        RepoName: github-actions

  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3Bucket}.s3.${S3Region}.amazonaws.com/infrastructure/vpc.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        VpcCIDR: 10.180.0.0/16
        PublicSubnet1CIDR: 10.180.8.0/21
        PublicSubnet2CIDR: 10.180.16.0/21
        PrivateSubnet1CIDR: 10.180.24.0/21
        PrivateSubnet2CIDR: 10.180.32.0/21

  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3Bucket}.s3.${S3Region}.amazonaws.com/infrastructure/security-groups.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        VPC: !GetAtt VPC.Outputs.VPC

  PublicALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3Bucket}.s3.${S3Region}.amazonaws.com/infrastructure/load-balancers.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        VPC: !GetAtt VPC.Outputs.VPC
        Subnets: !GetAtt VPC.Outputs.PublicSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.PublicLoadBalancerSecurityGroup
        SSLCert:
          Fn::ImportValue: SuperGuardDomainCertificate

  PrivateALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3Bucket}.s3.${S3Region}.amazonaws.com/infrastructure/load-balancers.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        VPC: !GetAtt VPC.Outputs.VPC
        Subnets: !GetAtt VPC.Outputs.PrivateSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.PrivateLoadBalancerSecurityGroup
        SSLCert:
          Fn::ImportValue: SuperGuardDomainCertificate

  ECS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3Bucket}.s3.${S3Region}.amazonaws.com/infrastructure/ecs-cluster.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        InstanceType: t2.medium
        ClusterSize: 1
        MaxClusterSize: 4
        Subnets: !GetAtt VPC.Outputs.PrivateSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup

  FaceTecECS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3Bucket}.s3.${S3Region}.amazonaws.com/infrastructure/ecs-cluster.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        InstanceType: c5.2xlarge
        ClusterSize: 1
        MaxClusterSize: 4
        Subnets: !GetAtt VPC.Outputs.PrivateSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.FaceTecHostSecurityGroup

  LifecycleHook:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3Bucket}.s3.${S3Region}.amazonaws.com/infrastructure/lifecyclehook.yaml
      Parameters:
        Cluster: !GetAtt ECS.Outputs.Cluster
        ECSAutoScalingGroupName: !GetAtt ECS.Outputs.ECSAutoScalingGroupName

  FaceTecLifecycleHook:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3Bucket}.s3.${S3Region}.amazonaws.com/infrastructure/lifecyclehook.yaml
      Parameters:
        Cluster: !GetAtt FaceTecECS.Outputs.Cluster
        ECSAutoScalingGroupName: !GetAtt FaceTecECS.Outputs.ECSAutoScalingGroupName

Outputs:
  VPC:
    Description: The ID of the VPC that this stack is deployed in
    Value: !GetAtt VPC.Outputs.VPC
    Export:
      Name: !Sub ${EnvironmentName}:VPC

  PublicSubnets:
    Description: A comma separated list of the public subnets
    Value: !GetAtt VPC.Outputs.PublicSubnets
    Export:
      Name: !Sub ${EnvironmentName}:PublicSubnets

  PrivateSubnets:
    Description: A comma separated list of the private subnets
    Value: !GetAtt VPC.Outputs.PrivateSubnets
    Export:
      Name: !Sub ${EnvironmentName}:PrivateSubnets

  ECSCluster:
    Description: The ECS Cluster ID that services should run on
    Value: !GetAtt ECS.Outputs.Cluster
    Export:
      Name: !Sub ${EnvironmentName}:ECSCluster

  FaceTecECSCluster:
    Description: The FaceTec ECS Cluster ID
    Value: !GetAtt FaceTecECS.Outputs.Cluster
    Export:
      Name: !Sub ${EnvironmentName}:FaceTecECSCluster

  PublicListener:
    Description: The Public Application Load Balancer listener to register services with
    Value: !GetAtt PublicALB.Outputs.Listener
    Export:
      Name: !Sub ${EnvironmentName}:PublicListener

  PrivateListener:
    Description: The Private Application Load Balancer listener to register services with
    Value: !GetAtt PrivateALB.Outputs.Listener
    Export:
      Name: !Sub ${EnvironmentName}:PrivateListener

  PublicLoadBalancerUrl:
    Description: The Public Application Load Balancer DNS url
    Value: !GetAtt PublicALB.Outputs.LoadBalancerUrl
    Export:
      Name: !Sub ${EnvironmentName}:PublicLoadBalancerUrl

  PublicLoadBalancerHostedZone:
    Description: The Public Application Load Balancer Hosted DNS Zone
    Value: !GetAtt PublicALB.Outputs.LoadBalancerHostedZone
    Export:
      Name: !Sub ${EnvironmentName}:PublicLoadBalancerHostedZone

  PrivateLoadBalancerUrl:
    Description: The Private Application Load Balancer DNS url
    Value: !GetAtt PrivateALB.Outputs.LoadBalancerUrl
    Export:
      Name: !Sub ${EnvironmentName}:PrivateLoadBalancerUrl

  PrivateLoadBalancerHostedZone:
    Description: The Private Application Load Balancer Hosted DNS Zone
    Value: !GetAtt PrivateALB.Outputs.LoadBalancerHostedZone
    Export:
      Name: !Sub ${EnvironmentName}:PrivateLoadBalancerHostedZone

  ECSServiceAutoScalingRoleARN:
    Description: The ECS service auto scaling role ARN
    Value: !GetAtt ECS.Outputs.ECSServiceAutoScalingRole
    Export:
      Name: !Sub ${EnvironmentName}:ECSServiceAutoScalingRoleARN

  FaceTecECSServiceAutoScalingRoleARN:
    Description: The ECS service auto scaling role ARN
    Value: !GetAtt FaceTecECS.Outputs.ECSServiceAutoScalingRole
    Export:
      Name: !Sub ${EnvironmentName}:FaceTecECSServiceAutoScalingRoleARN

  MongoVPCESecurityGroup:
    Description: The securtity group to allow access to the MongoDB VPCE
    Value: !GetAtt SecurityGroups.Outputs.MongoVPCESecurityGroup
    Export:
      Name: !Sub ${EnvironmentName}:MongoVPCESecurityGroup
